name: Staging CI/CD

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Closest approximation I could find to run when a branch is merged
  push:
    branches:
      - master
jobs:
  publish_to_dockerhub:
    runs-on: ubuntu-latest
    name: 'Build and publish image to Dockerhub'
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Clone Github Repo
        uses: actions/checkout@master
      -
        name: Build and push to Dockerhub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: nonsensesynapse/draftivist:latest
          build-args: |
            "STATIC_PATH=http://staging.draftivist.com/static"
            "API_HOST=http://staging.draftivist.com/api"
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy_to_staging:
    runs-on: ubuntu-latest
    name: 'Deploy latest Dockerhub image to staging server'
    steps:
      - name: Deploy Container to Staging
        uses: appleboy/ssh-action@v0.1.4
        env:
          POSTGRES_DB: draftivist
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: docker
          POSTGRES_HOST: db
          POSTGRES_PORT: 5432
          PROJECT_ENVIRONMENT: STAGING
        with:
          HOST: ${{ secrets.STAGING_HOST }}
          USERNAME: ${{ secrets.STAGING_USER }}
          KEY: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          envs: POSTGRES_DB,POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_HOST,POSTGRES_PORT,PROJECT_ENVIRONMENT
          script: |
            # Pull latest
            docker image pull nonsensesynapse/draftivist:latest

            # Stop the old container
            docker stop draftivist_staging
            docker rm draftivist_staging

            # Run the new container
            docker run -d -p 8000:8000 --name draftivist_staging \
            -e POSTGRES_DB=$POSTGRES_DB \
            -e POSTGRES_USER=$POSTGRES_USER \
            -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
            -e POSTGRES_HOST=$POSTGRES_HOST \
            -e POSTGRES_PORT=$POSTGRES_PORT \
            -e PROJECT_ENVIRONMENT=$PROJECT_ENVIRONMENT \
            nonsensesynapse/draftivist:staging

            # Give the container access to the other staging containers
            docker network connect draftivist_default draftivist_staging
